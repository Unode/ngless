variables:
    # gitlab only allows caching folders inside the project's directory
    # stack keeps part of the cache in ~/.stack so to workaround this
    # we tell stack to keep it's cache inside the project's location
    STACK_ROOT: "${CI_PROJECT_DIR}/.stack"

cache:
    paths:
        - .stack
        - .stack-work
        - .stack-work-test
        - .stack-work-profile
    # CI_JOB_NAME creates one cache per build target (e.g. build-and-test-ubuntu)
    key: "$CI_JOB_NAME"

build-and-test-ubuntu:
    image: registry.gitlab.com/ngless/ngless/ubuntu-ghc-stack:old
    stage: build

    before_script:
    - apt update
    - apt upgrade -y
    - stack upgrade
    - mkdir bin
    # Workaround gitlab memory limits with a swapfile
    # - dd if=/dev/zero of=/var/tmp/swapfile bs=1M count=2048 && mkswap /var/tmp/swapfile && chmod 600 /var/tmp/swapfile && swapon /var/tmp/swapfile && free
    # Needed for tests that print UTF8 characters such as motus
    # Same issue as https://github.com/commercialhaskell/stack/issues/793

    variables:
        LC_ALL: "C.UTF-8"
        STACKOPTS: "--ghc-options '-fPIC' --flag NGLess:embed"

    retry: 1

    script:
    - make static
    - make modules
    - make check
    - make install prefix=${PWD}
    - PATH=${PWD}/bin:$PATH ./run-tests.sh

    artifacts:
        when: on_success
        paths:
        - bin/ngless
        - Modules/packages/
        expire_in: 1 month

build-and-test-ubuntu-wsl:
    image: registry.gitlab.com/ngless/ngless/ubuntu-ghc-stack:wsl
    stage: build

    before_script:
    - apt update
    - apt upgrade -y
    - stack upgrade
    - mkdir bin
    # Workaround gitlab memory limits with a swapfile
    # - dd if=/dev/zero of=/var/tmp/swapfile bs=1M count=2048 && mkswap /var/tmp/swapfile && chmod 600 /var/tmp/swapfile && swapon /var/tmp/swapfile && free
    # Needed for tests that print UTF8 characters such as motus
    # Same issue as https://github.com/commercialhaskell/stack/issues/793

    variables:
        LC_ALL: "C.UTF-8"
        STACKOPTS: "--system-ghc --ghc-options '-fPIC' --flag NGLess:embed"

    retry: 1

    script:
    - make static
    - make modules
    - make check
    - make install prefix=${PWD}
    - PATH=${PWD}/bin:$PATH ./run-tests.sh

    artifacts:
        when: on_success
        paths:
        - bin/ngless
        - Modules/packages/
        expire_in: 1 month

build-and-test-ubuntu-wsl-profiling:
    image: registry.gitlab.com/ngless/ngless/ubuntu-ghc-stack:wsl
    stage: build

    before_script:
    - apt update
    - apt upgrade -y
    - stack upgrade
    - mkdir bin
    # Workaround gitlab memory limits with a swapfile
    - dd if=/dev/zero of=/var/tmp/swapfile bs=1M count=2048 && mkswap /var/tmp/swapfile && chmod 600 /var/tmp/swapfile && swapon /var/tmp/swapfile && free
    # Needed for tests that print UTF8 characters such as motus
    # Same issue as https://github.com/commercialhaskell/stack/issues/793

    variables:
        LC_ALL: "C.UTF-8"
        STACKOPTS: "--system-ghc --work-dir .stack-work-profile --ghc-options '-fPIC -g -fprof-auto -rtsopts' --flag NGLess:embed --executable-profiling --library-profiling"
    retry: 1

    script:
    - make modules
    - make install prefix=${PWD}
    - PATH=${PWD}/bin:$PATH ./run-tests.sh

    # Allow this to fail without failing the entire commit
    allow_failure: true
    # Don't run this step automatically, make it a manually triggered build
    when: manual
    # The profiling build takes considerably longer, so relax the project's 2 hour limit
    timeout: 4 hours

    artifacts:
        when: on_success
        paths:
        - bin/ngless
        - Modules/packages/
        expire_in: 1 month

build-and-longtests-ubuntu-wsl:
    image: registry.gitlab.com/ngless/ngless/ubuntu-ghc-stack:wsl
    stage: build
    tags:
    - longjob

    before_script:
    - apt update
    - apt upgrade -y
    - stack upgrade
    - mkdir bin

    variables:
        LC_ALL: "C.UTF-8"
        STACKOPTS: "--system-ghc --ghc-options '-fPIC' --flag NGLess:embed"
    retry: 1

    script:
    - make modules
    - make check
    - make install prefix=${PWD}
    - PATH=${PWD}/bin:$PATH ./run-tests.sh long-

    # Allow this to fail without failing the entire commit
    #allow_failure: true
    # Don't run this step automatically, make it a manually triggered build
    when: manual
    # The profiling build takes considerably longer, so relax the project's 2 hour limit
    timeout: 24 hours

build-and-test-ubuntu-non-static:
    image: registry.gitlab.com/ngless/ngless/ubuntu-ghc-stack:old
    stage: build

    before_script:
    - apt update
    - apt upgrade -y
    - stack upgrade
    - mkdir prefix-test
    # Workaround gitlab memory limits with a swapfile
    # - dd if=/dev/zero of=/var/tmp/swapfile bs=1M count=2048 && mkswap /var/tmp/swapfile && chmod 600 /var/tmp/swapfile && swapon /var/tmp/swapfile && free
    # Needed for tests that print UTF8 characters such as motus
    # Same issue as https://github.com/commercialhaskell/stack/issues/793

    variables:
        LC_ALL: "C.UTF-8"

    retry: 1

    script:
    - make
    - make modules
    - make check
    - make install prefix=${PWD}
    - PATH=${PWD}/bin:$PATH ./run-tests.sh


build-and-test-ubuntu-devel:
    image: registry.gitlab.com/ngless/ngless/ubuntu-ghc-stack:devel
    stage: build

    before_script:
    - apt update
    - apt upgrade -y
    - stack upgrade
    - mkdir prefix-test
    # Workaround gitlab memory limits with a swapfile
    # - dd if=/dev/zero of=/var/tmp/swapfile bs=1M count=2048 && mkswap /var/tmp/swapfile && chmod 600 /var/tmp/swapfile && swapon /var/tmp/swapfile && free
    # Needed for tests that print UTF8 characters such as motus
    # Same issue as https://github.com/commercialhaskell/stack/issues/793

    variables:
        LC_ALL: "C.UTF-8"
        STACKOPTS: "--system-ghc --ghc-options '-fPIC' --flag NGLess:embed"

    retry: 1

    script:
    - make static
    - make modules
    - make check
    - make install prefix=${PWD}
    - PATH=${PWD}/bin:$PATH ./run-tests.sh

    artifacts:
        when: on_success
        paths:
        - bin/ngless
        - Modules/packages/
        expire_in: 1 month

# Temporarily disable Alpine due to https://github.com/commercialhaskell/stack/issues/2387
# build-and-test-alpine:
#     image: registry.gitlab.com/ngless/ngless/alpine-ghc-stack:edge
#     stage: build
#
#     before_script:
#     - apk update
#     - apk upgrade
#     - stack upgrade
#     # NOTE Workaround to bash hanging when <() is used
#     # This has to be set on the parent shell before launching bash
#     # More info at: http://www.openwall.com/lists/musl/2017/12/07/13
#     - ulimit -u 1000
#     # Workaround gitlab memory limits with a swapfile
#     - dd if=/dev/zero of=/var/tmp/swapfile bs=1M count=2048 && mkswap /var/tmp/swapfile && chmod 600 /var/tmp/swapfile && swapon /var/tmp/swapfile && free
#     - mkdir bin
#
#     variables:
#         STACKOPTS: "--system-ghc --ghc-options '-fPIC' --flag NGLess:embed"
#
#     retry: 1
#
#     script:
#     - make static
#     - make modules
#     - make check
#     - make install prefix=${PWD}
#     - PATH=${PWD}/bin:$PATH ./run-tests.sh
#
#     artifacts:
#         when: on_success
#         paths:
#         - bin/ngless
#         - Modules/packages/
#         expire_in: 1 month
